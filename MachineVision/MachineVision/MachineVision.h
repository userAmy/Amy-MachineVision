/*****************************************************************************
*                                                                            *
*  @file     MachineVision.h                                                 *
*  @brief    此类为机器视觉基类                                              *
*                                                                            *
*  @author   ZJH                                                             *
*  @email    877049745@qq.com                                                *
*  @version  1.0.0.1(版本号)                                                 *
*                                                                            *
*----------------------------------------------------------------------------*
*  Remark         : 目前此库功能局限于一些预处理，后续会加人工智能部分       *
*----------------------------------------------------------------------------*
*  Change History :                                                          *
*  <Date>     | <Version> | <Author>       | <Description>                   *
*----------------------------------------------------------------------------*
*  2019/11/14 | 1.0.0.1   | ZJH            | Create file                     *
*----------------------------------------------------------------------------*
*                                                                            *
*****************************************************************************/
#include <opencv2/opencv.hpp>
#include <vector>

using namespace std;
using namespace cv;


// 轮廓 ==> 集合信息
struct MyPicture
{
	cv::Rect			 Rect;                    //  外接矩形
	Mat					 HSV_Rect;                //  HSV切割矩形
	Mat					 RGB_Rect;                //  彩色切割
	Mat					 Canny_Rect;              //  梯度切割图
	Mat					 Clahe_Rect;              //  受限直方图切割
	Mat					 Thresold_Rect;           //  二值图切割
	vector<cv::Point>	 point;                   //  轮廓点集
	Point2f				 center;                  //  中心点
	double				 area;                    //  轮廓面积
	double				 RectArea;                //  矩形面积
	string				 color;                   //  图片颜色
	cv::RotatedRect		 MinRect;                 //  最小矩形
};

class MachineVision
{
	/**
	 ************************************************************************
	 *@brief       初始化图片信息
	 *@parameter
	 *
	 *             Binary      二值图
	 *
	 *@version     v1.0.0
	 *@author      ZJH
	 *@date        2019/09/24
	 *----------------------------------------------------------------------
	 *@修改时间:
	 *@修改人+联系方式:
	 *@说明(你为什么修改):
	 ************************************************************************
	 */
	vector<MyPicture> initPictureInformation(Mat Binary);


	/**
 	 ************************************************************************
	 *@brief       得到轮廓
	 *@parameter
	 *
	 *             src      原图
	 *
	 *@version     v1.0.1
	 *@author      ZJH
	 *@date        2019/08/16
	 *----------------------------------------------------------------------
	 *@修改时间:
	 *@修改人+联系方式:
	 *@说明(你为什么修改):
	 ************************************************************************
	 */
	vector<vector<cv::Point>> getContours(Mat src);


	/**
	 ************************************************************************
	 *@brief       得到轮廓中心点
	 *@parameter
	 *
	 *             point   轮廓
	 *
	 *@version     v1.0.1
	 *@author      ZJH
	 *@date        2019/08/16
	 *----------------------------------------------------------------------
	 *@修改时间:
	 *@修改人+联系方式:
	 *@说明(你为什么修改):
	 ************************************************************************
	 */
	Point2f getCenter(vector<cv::Point> point);


	/**
	 ************************************************************************
	 *@brief       得到所有图形的切割矩形
	 *@parameter
	 *
	 *             originalMat  切割原图
	 *             point        待切割轮廓
	 *
	 *@version     v1.0.1
	 *@author      ZJH
	 *@date        2019/08/16
	 *----------------------------------------------------------------------
	 *@修改时间:
	 *@修改人+联系方式:
	 *@说明(你为什么修改):
	 ************************************************************************
	 */
	Mat getMatCutRect(Mat originalMat, vector<cv::Point> point);


	/**
	 ************************************************************************
	 *@brief       得到边框面积
	 *@parameter
	 *
	 *             rect  要计算的边框
	 *
	 *@version     v1.0.0
	 *@author      ZJH
	 *@date        2019/10/16
	 *----------------------------------------------------------------------
	 *@修改时间:
	 *@修改人+联系方式:
	 *@说明(你为什么修改):
	 ************************************************************************
	 */
	int getRectArea(cv::Rect rect);


};